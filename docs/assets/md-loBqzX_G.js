import{d as K,z as lt,h as M,r as v,J as ot,Q as at,p as O,Y as ht,H as ut,f as Q,o as G,i as gt,e as q,g as j,t as pt,C as k,b as mt,w as ft,m as dt,v as yt,x as At}from"./modules/vue-C0xO-Zrb.js";import{c as Bt,l as Vt,m as Rt,C as Ft,T as St,u as bt}from"./index-yhcbASwP.js";import{l as Ct}from"./lz-string-ClkztLv7.js";import{u as ct,f as Zt}from"./slidev/context-DuqwXHtx.js";import{_ as Et}from"./slidev/TitleIcon.vue_vue_type_script_setup_true_lang-BDVpOorG.js";import{I as Nt}from"./slidev/default-C_TPt_ZO.js";import"./modules/shiki-dZc2lutM.js";import"./modules/file-saver-C8BEGaqa.js";const Ut=Object.freeze({diffTimeout:1,diffEditCost:4,matchThreshold:.5,matchDistance:1e3,patchDeleteThreshold:.5,patchMargin:4,matchMaxBits:32});function kt(n){if(n?.__resolved)return n;const e={...Ut,...n};return Object.defineProperty(e,"__resolved",{value:!0,enumerable:!1}),e}const E=-1,C=1,S=0;function F(n,e){return[n,e]}function X(n,e,t,i=!0,s){const r=kt(t);typeof s>"u"&&(r.diffTimeout<=0?s=Number.MAX_VALUE:s=new Date().getTime()+r.diffTimeout*1e3);const l=s;if(n==null||e==null)throw new Error("Null input. (diff_main)");if(n===e)return n?[F(S,n)]:[];const a=i;let o=H(n,e);const h=n.substring(0,o);n=n.substring(o),e=e.substring(o),o=x(n,e);const g=n.substring(n.length-o);n=n.substring(0,n.length-o),e=e.substring(0,e.length-o);const u=Xt(n,e,r,a,l);return h&&u.unshift(F(S,h)),g&&u.push(F(S,g)),L(u),u}function Xt(n,e,t,i,s){let r;if(!n)return[F(C,e)];if(!e)return[F(E,n)];const l=n.length>e.length?n:e,a=n.length>e.length?e:n,o=l.indexOf(a);if(o!==-1)return r=[F(C,l.substring(0,o)),F(S,a),F(C,l.substring(o+a.length))],n.length>e.length&&(r[0][0]=r[2][0]=E),r;if(a.length===1)return[F(E,n),F(C,e)];const h=xt(n,e,t);if(h){const g=h[0],u=h[1],p=h[2],m=h[3],c=h[4],f=X(g,p,t,i,s),V=X(u,m,t,i,s);return f.concat([F(S,c)],V)}return i&&n.length>100&&e.length>100?Dt(n,e,t,s):Jt(n,e,t,s)}function Dt(n,e,t,i){const s=Wt(n,e);n=s.chars1,e=s.chars2;const r=s.lineArray,l=X(n,e,t,!1,i);Mt(l,r),Yt(l),l.push(F(S,""));let a=0,o=0,h=0,g="",u="";for(;a<l.length;){switch(l[a][0]){case C:h++,u+=l[a][1];break;case E:o++,g+=l[a][1];break;case S:if(o>=1&&h>=1){l.splice(a-o-h,o+h),a=a-o-h;const p=X(g,u,t,!1,i);for(let m=p.length-1;m>=0;m--)l.splice(a,0,p[m]);a=a+p.length}h=0,o=0,g="",u="";break}a++}return l.pop(),l}function Jt(n,e,t,i){const s=n.length,r=e.length,l=Math.ceil((s+r)/2),a=l,o=2*l,h=new Array(o),g=new Array(o);for(let A=0;A<o;A++)h[A]=-1,g[A]=-1;h[a+1]=0,g[a+1]=0;const u=s-r,p=u%2!==0;let m=0,c=0,f=0,V=0;for(let A=0;A<l&&!(new Date().getTime()>i);A++){for(let y=-A+m;y<=A-c;y+=2){const B=a+y;let d;y===-A||y!==A&&h[B-1]<h[B+1]?d=h[B+1]:d=h[B-1]+1;let R=d-y;for(;d<s&&R<r&&n.charAt(d)===e.charAt(R);)d++,R++;if(h[B]=d,d>s)c+=2;else if(R>r)m+=2;else if(p){const b=a+u-y;if(b>=0&&b<o&&g[b]!==-1){const N=s-g[b];if(d>=N)return I(n,e,t,d,R,i)}}}for(let y=-A+f;y<=A-V;y+=2){const B=a+y;let d;y===-A||y!==A&&g[B-1]<g[B+1]?d=g[B+1]:d=g[B-1]+1;let R=d-y;for(;d<s&&R<r&&n.charAt(s-d-1)===e.charAt(r-R-1);)d++,R++;if(g[B]=d,d>s)V+=2;else if(R>r)f+=2;else if(!p){const b=a+u-y;if(b>=0&&b<o&&h[b]!==-1){const N=h[b],D=a+N-b;if(d=s-d,N>=d)return I(n,e,t,N,D,i)}}}}return[F(E,n),F(C,e)]}function I(n,e,t,i,s,r){const l=n.substring(0,i),a=e.substring(0,s),o=n.substring(i),h=e.substring(s),g=X(l,a,t,!1,r),u=X(o,h,t,!1,r);return g.concat(u)}function Wt(n,e){const t=[],i={};let s=4e4;t[0]="";function r(o){let h="",g=0,u=-1,p=t.length;for(;u<o.length-1;){u=o.indexOf(`
`,g),u===-1&&(u=o.length-1);let m=o.substring(g,u+1);(i.hasOwnProperty?Object.prototype.hasOwnProperty.call(i,m):i[m]!==void 0)?h+=String.fromCharCode(i[m]):(p===s&&(m=o.substring(g),u=o.length),h+=String.fromCharCode(p),i[m]=p,t[p++]=m),g=u+1}return h}const l=r(n);s=65535;const a=r(e);return{chars1:l,chars2:a,lineArray:t}}function Mt(n,e){for(let t=0;t<n.length;t++){const i=n[t][1],s=[];for(let r=0;r<i.length;r++)s[r]=e[i.charCodeAt(r)];n[t][1]=s.join("")}}function H(n,e){if(!n||!e||n.charAt(0)!==e.charAt(0))return 0;let t=0,i=Math.min(n.length,e.length),s=i,r=0;for(;t<s;)n.substring(r,s)===e.substring(r,s)?(t=s,r=t):i=s,s=Math.floor((i-t)/2+t);return s}function x(n,e){if(!n||!e||n.charAt(n.length-1)!==e.charAt(e.length-1))return 0;let t=0,i=Math.min(n.length,e.length),s=i,r=0;for(;t<s;)n.substring(n.length-s,n.length-r)===e.substring(e.length-s,e.length-r)?(t=s,r=t):i=s,s=Math.floor((i-t)/2+t);return s}function P(n,e){const t=n.length,i=e.length;if(t===0||i===0)return 0;t>i?n=n.substring(t-i):t<i&&(e=e.substring(0,t));const s=Math.min(t,i);if(n===e)return s;let r=0,l=1;for(;;){const a=n.substring(s-l),o=e.indexOf(a);if(o===-1)return r;l+=o,(o===0||n.substring(s-l)===e.substring(0,l))&&(r=l,l++)}}function xt(n,e,t){if(t.diffTimeout<=0)return null;const i=n.length>e.length?n:e,s=n.length>e.length?e:n;if(i.length<4||s.length*2<i.length)return null;function r(c,f,V){const A=c.substring(V,V+Math.floor(c.length/4));let y=-1,B="",d,R,b,N;for(;(y=f.indexOf(A,y+1))!==-1;){const D=H(c.substring(V),f.substring(y)),W=x(c.substring(0,V),f.substring(0,y));B.length<W+D&&(B=f.substring(y-W,y)+f.substring(y,y+D),d=c.substring(0,V-W),R=c.substring(V+D),b=f.substring(0,y-W),N=f.substring(y+D))}return B.length*2>=c.length?[d,R,b,N,B]:null}const l=r(i,s,Math.ceil(i.length/4)),a=r(i,s,Math.ceil(i.length/2));let o;if(!l&&!a)return null;a?l?o=l[4].length>a[4].length?l:a:o=a:o=l;let h,g,u,p;n.length>e.length?(h=o[0],g=o[1],u=o[2],p=o[3]):(u=o[0],p=o[1],h=o[2],g=o[3]);const m=o[4];return[h,g,u,p,m]}function Yt(n){let e=!1;const t=[];let i=0,s=null,r=0,l=0,a=0,o=0,h=0;for(;r<n.length;)n[r][0]===S?(t[i++]=r,l=o,a=h,o=0,h=0,s=n[r][1]):(n[r][0]===C?o+=n[r][1].length:h+=n[r][1].length,s&&s.length<=Math.max(l,a)&&s.length<=Math.max(o,h)&&(n.splice(t[i-1],0,F(E,s)),n[t[i-1]+1][0]=C,i--,i--,r=i>0?t[i-1]:-1,l=0,a=0,o=0,h=0,s=null,e=!0)),r++;for(e&&L(n),vt(n),r=1;r<n.length;){if(n[r-1][0]===E&&n[r][0]===C){const g=n[r-1][1],u=n[r][1],p=P(g,u),m=P(u,g);p>=m?(p>=g.length/2||p>=u.length/2)&&(n.splice(r,0,F(S,u.substring(0,p))),n[r-1][1]=g.substring(0,g.length-p),n[r+1][1]=u.substring(p),r++):(m>=g.length/2||m>=u.length/2)&&(n.splice(r,0,F(S,g.substring(0,m))),n[r-1][0]=C,n[r-1][1]=u.substring(0,u.length-m),n[r+1][0]=E,n[r+1][1]=g.substring(m),r++),r++}r++}}const z=/[^a-z0-9]/i,_=/\s/,$=/[\r\n]/,Tt=/\n\r?\n$/,wt=/^\r?\n\r?\n/;function vt(n){function e(i,s){if(!i||!s)return 6;const r=i.charAt(i.length-1),l=s.charAt(0),a=r.match(z),o=l.match(z),h=a&&r.match(_),g=o&&l.match(_),u=h&&r.match($),p=g&&l.match($),m=u&&i.match(Tt),c=p&&s.match(wt);return m||c?5:u||p?4:a&&!h&&g?3:h||g?2:a||o?1:0}let t=1;for(;t<n.length-1;){if(n[t-1][0]===S&&n[t+1][0]===S){let i=n[t-1][1],s=n[t][1],r=n[t+1][1];const l=x(i,s);if(l){const u=s.substring(s.length-l);i=i.substring(0,i.length-l),s=u+s.substring(0,s.length-l),r=u+r}let a=i,o=s,h=r,g=e(i,s)+e(s,r);for(;s.charAt(0)===r.charAt(0);){i+=s.charAt(0),s=s.substring(1)+r.charAt(0),r=r.substring(1);const u=e(i,s)+e(s,r);u>=g&&(g=u,a=i,o=s,h=r)}n[t-1][1]!==a&&(a?n[t-1][1]=a:(n.splice(t-1,1),t--),n[t][1]=o,h?n[t+1][1]=h:(n.splice(t+1,1),t--))}t++}}function L(n){n.push(F(S,""));let e=0,t=0,i=0,s="",r="",l;for(;e<n.length;)switch(n[e][0]){case C:i++,r+=n[e][1],e++;break;case E:t++,s+=n[e][1],e++;break;case S:t+i>1?(t!==0&&i!==0&&(l=H(r,s),l!==0&&(e-t-i>0&&n[e-t-i-1][0]===S?n[e-t-i-1][1]+=r.substring(0,l):(n.splice(0,0,F(S,r.substring(0,l))),e++),r=r.substring(l),s=s.substring(l)),l=x(r,s),l!==0&&(n[e][1]=r.substring(r.length-l)+n[e][1],r=r.substring(0,r.length-l),s=s.substring(0,s.length-l))),e-=t+i,n.splice(e,t+i),s.length&&(n.splice(e,0,F(E,s)),e++),r.length&&(n.splice(e,0,F(C,r)),e++),e++):e!==0&&n[e-1][0]===S?(n[e-1][1]+=n[e][1],n.splice(e,1)):e++,i=0,t=0,s="",r="";break}n[n.length-1][1]===""&&n.pop();let a=!1;for(e=1;e<n.length-1;)n[e-1][0]===S&&n[e+1][0]===S&&(n[e][1].substring(n[e][1].length-n[e-1][1].length)===n[e-1][1]?(n[e][1]=n[e-1][1]+n[e][1].substring(0,n[e][1].length-n[e-1][1].length),n[e+1][1]=n[e-1][1]+n[e+1][1],n.splice(e-1,1),a=!0):n[e][1].substring(0,n[e+1][1].length)===n[e+1][1]&&(n[e-1][1]+=n[e+1][1],n[e][1]=n[e][1].substring(n[e+1][1].length)+n[e+1][1],n.splice(e+1,1),a=!0)),e++;a&&L(n)}function Ot(n){return typeof n=="string"?`'${n}'`:new Gt().serialize(n)}const Gt=function(){class n{#t=new Map;compare(t,i){const s=typeof t,r=typeof i;return s==="string"&&r==="string"?t.localeCompare(i):s==="number"&&r==="number"?t-i:String.prototype.localeCompare.call(this.serialize(t,!0),this.serialize(i,!0))}serialize(t,i){if(t===null)return"null";switch(typeof t){case"string":return i?t:`'${t}'`;case"bigint":return`${t}n`;case"object":return this.$object(t);case"function":return this.$function(t)}return String(t)}serializeObject(t){const i=Object.prototype.toString.call(t);if(i!=="[object Object]")return this.serializeBuiltInType(i.length<10?`unknown:${i}`:i.slice(8,-1),t);const s=t.constructor,r=s===Object||s===void 0?"":s.name;if(r!==""&&globalThis[r]===s)return this.serializeBuiltInType(r,t);if(typeof t.toJSON=="function"){const l=t.toJSON();return r+(l!==null&&typeof l=="object"?this.$object(l):`(${this.serialize(l)})`)}return this.serializeObjectEntries(r,Object.entries(t))}serializeBuiltInType(t,i){const s=this["$"+t];if(s)return s.call(this,i);if(typeof i?.entries=="function")return this.serializeObjectEntries(t,i.entries());throw new Error(`Cannot serialize ${t}`)}serializeObjectEntries(t,i){const s=Array.from(i).sort((l,a)=>this.compare(l[0],a[0]));let r=`${t}{`;for(let l=0;l<s.length;l++){const[a,o]=s[l];r+=`${this.serialize(a,!0)}:${this.serialize(o)}`,l<s.length-1&&(r+=",")}return r+"}"}$object(t){let i=this.#t.get(t);return i===void 0&&(this.#t.set(t,`#${this.#t.size}`),i=this.serializeObject(t),this.#t.set(t,i)),i}$function(t){const i=Function.prototype.toString.call(t);return i.slice(-15)==="[native code] }"?`${t.name||""}()[native]`:`${t.name}(${t.length})${i.replace(/\s*\n\s*/g,"")}`}$Array(t){let i="[";for(let s=0;s<t.length;s++)i+=this.serialize(t[s]),s<t.length-1&&(i+=",");return i+"]"}$Date(t){try{return`Date(${t.toISOString()})`}catch{return"Date(null)"}}$ArrayBuffer(t){return`ArrayBuffer[${new Uint8Array(t).join(",")}]`}$Set(t){return`Set${this.$Array(Array.from(t).sort((i,s)=>this.compare(i,s)))}`}$Map(t){return this.serializeObjectEntries("Map",t.entries())}}for(const e of["Error","RegExp","URL"])n.prototype["$"+e]=function(t){return`${e}(${t})`};for(const e of["Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array"])n.prototype["$"+e]=function(t){return`${e}[${t.join(",")}]`};for(const e of["BigInt64Array","BigUint64Array"])n.prototype["$"+e]=function(t){return`${e}[${t.join("n,")}${t.length>0?"n":""}]`};return n}(),qt=[1779033703,-1150833019,1013904242,-1521486534,1359893119,-1694144372,528734635,1541459225],jt=[1116352408,1899447441,-1245643825,-373957723,961987163,1508970993,-1841331548,-1424204075,-670586216,310598401,607225278,1426881987,1925078388,-2132889090,-1680079193,-1046744716,-459576895,-272742522,264347078,604807628,770255983,1249150122,1555081692,1996064986,-1740746414,-1473132947,-1341970488,-1084653625,-958395405,-710438585,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,-2117940946,-1838011259,-1564481375,-1474664885,-1035236496,-949202525,-778901479,-694614492,-200395387,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,-2067236844,-1933114872,-1866530822,-1538233109,-1090935817,-965641998],Kt="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",U=[];class Ht{_data=new J;_hash=new J([...qt]);_nDataBytes=0;_minBufferSize=0;finalize(e){e&&this._append(e);const t=this._nDataBytes*8,i=this._data.sigBytes*8;return this._data.words[i>>>5]|=128<<24-i%32,this._data.words[(i+64>>>9<<4)+14]=Math.floor(t/4294967296),this._data.words[(i+64>>>9<<4)+15]=t,this._data.sigBytes=this._data.words.length*4,this._process(),this._hash}_doProcessBlock(e,t){const i=this._hash.words;let s=i[0],r=i[1],l=i[2],a=i[3],o=i[4],h=i[5],g=i[6],u=i[7];for(let p=0;p<64;p++){if(p<16)U[p]=e[t+p]|0;else{const B=U[p-15],d=(B<<25|B>>>7)^(B<<14|B>>>18)^B>>>3,R=U[p-2],b=(R<<15|R>>>17)^(R<<13|R>>>19)^R>>>10;U[p]=d+U[p-7]+b+U[p-16]}const m=o&h^~o&g,c=s&r^s&l^r&l,f=(s<<30|s>>>2)^(s<<19|s>>>13)^(s<<10|s>>>22),V=(o<<26|o>>>6)^(o<<21|o>>>11)^(o<<7|o>>>25),A=u+V+m+jt[p]+U[p],y=f+c;u=g,g=h,h=o,o=a+A|0,a=l,l=r,r=s,s=A+y|0}i[0]=i[0]+s|0,i[1]=i[1]+r|0,i[2]=i[2]+l|0,i[3]=i[3]+a|0,i[4]=i[4]+o|0,i[5]=i[5]+h|0,i[6]=i[6]+g|0,i[7]=i[7]+u|0}_append(e){typeof e=="string"&&(e=J.fromUtf8(e)),this._data.concat(e),this._nDataBytes+=e.sigBytes}_process(e){let t,i=this._data.sigBytes/64;e?i=Math.ceil(i):i=Math.max((i|0)-this._minBufferSize,0);const s=i*16,r=Math.min(s*4,this._data.sigBytes);if(s){for(let l=0;l<s;l+=16)this._doProcessBlock(this._data.words,l);t=this._data.words.splice(0,s),this._data.sigBytes-=r}return new J(t,r)}}class J{words;sigBytes;constructor(e,t){e=this.words=e||[],this.sigBytes=t===void 0?e.length*4:t}static fromUtf8(e){const t=unescape(encodeURIComponent(e)),i=t.length,s=[];for(let r=0;r<i;r++)s[r>>>2]|=(t.charCodeAt(r)&255)<<24-r%4*8;return new J(s,i)}toBase64(){const e=[];for(let t=0;t<this.sigBytes;t+=3){const i=this.words[t>>>2]>>>24-t%4*8&255,s=this.words[t+1>>>2]>>>24-(t+1)%4*8&255,r=this.words[t+2>>>2]>>>24-(t+2)%4*8&255,l=i<<16|s<<8|r;for(let a=0;a<4&&t*8+a*6<this.sigBytes*8;a++)e.push(Kt.charAt(l>>>6*(3-a)&63))}return e.join("")}concat(e){if(this.words[this.sigBytes>>>2]&=4294967295<<32-this.sigBytes%4*8,this.words.length=Math.ceil(this.sigBytes/4),this.sigBytes%4)for(let t=0;t<e.sigBytes;t++){const i=e.words[t>>>2]>>>24-t%4*8&255;this.words[this.sigBytes+t>>>2]|=i<<24-(this.sigBytes+t)%4*8}else for(let t=0;t<e.sigBytes;t+=4)this.words[this.sigBytes+t>>>2]=e.words[t>>>2];this.sigBytes+=e.sigBytes}}function Lt(n){return new Ht().finalize(n).toBase64()}function Qt(n){return Lt(Ot(n))}function It(n,e,t="",i=!1){const s=Qt(n+t);let r=0,l=0;const a=Math.ceil(Math.log10(e.length)),o=Pt(e).flatMap((h,g)=>{l=h[0]?.offset||r;const u=h[h.length-1];u?r=u.offset+u.content.length:r+=1;const p=[...h,{content:`
`,offset:r}];return i&&p.unshift({key:`${s}-ln-${g+1}`,content:`${String(g+1).padStart(a," ")}  `,offset:l,htmlClass:"shiki-magic-move-line-number"}),p}).map((h,g)=>{const u=h;return u.key||=`${s}-${g}`,u});return{code:n,hash:s,tokens:o,lineNumbers:i}}function Pt(n){return n.map(e=>e.flatMap(t=>{if(t.content.match(/^\s+$/))return t;const i=t.content.match(/^(\s*)(.*?)(\s*)$/);if(!i)return t;const[,s,r,l]=i;if(!s&&!l)return t;const a=[{...t,offset:t.offset+s.length,content:r}];return s&&a.unshift({content:s,offset:t.offset}),l&&a.push({content:l,offset:t.offset+s.length+r.length}),a}))}function zt(n,e){let t=0;const i=n.key;let s=0;const r=[];function l(){return s===0?(s++,i):`${i}-${s++}`}for(const a of e)a>t&&r.push({...n,content:n.content.slice(t,a),offset:n.offset+t,key:l()}),t=a;return t<n.content.length&&r.push({...n,content:n.content.slice(t),offset:n.offset+t,key:l()}),r}function tt(n,e){const t=Array.from(e instanceof Set?e:new Set(e)).sort((i,s)=>i-s);return t.length?n.flatMap(i=>{const s=t.filter(r=>i.offset<r&&r<i.offset+i.content.length).map(r=>r-i.offset).sort((r,l)=>r-l);return s.length?zt(i,s):i}):n}function _t(n,e,t={}){const{splitTokens:i=!1,enhanceMatching:s=!0}=t,r=$t(n.code,e.code,t),l=i?tt(n.tokens,r.flatMap(h=>h.from)):n.tokens,a=i?tt(e.tokens,r.flatMap(h=>h.to)):e.tokens,o=new Set;if(r.forEach(h=>{const g=l.filter(c=>c.offset>=h.from[0]&&c.offset+c.content.length<=h.from[1]),u=a.filter(c=>c.offset>=h.to[0]&&c.offset+c.content.length<=h.to[1]);let p=0,m=0;for(;p<g.length&&m<u.length&&!(!g[p]||!u[m]);)g[p].content===u[m].content?(u[m].key=g[p].key,o.add(g[p].key),p++,m++):g[p+1]?.content===u[m].content?p++:(g[p].content===u[m+1]?.content||p++,m++)}),s)for(const h of l){if(o.has(h.key)||h.content.length<3||!h.content.match(/^[\w-]+$/))continue;const g=a.find(u=>u.content===h.content&&!o.has(u.key));g&&(g.key=h.key,o.add(h.key))}return{from:l.length===n.tokens.length?n:{...n,tokens:l},to:a.length===e.tokens.length?e:{...e,tokens:a}}}function $t(n,e,t={}){let i=X(n,e);i=t.diffCleanup?.(i)||i;let s="",r="";const l=[];for(const[a,o]of i)a===0?(l.push({from:[s.length,s.length+o.length],to:[r.length,r.length+o.length],content:o}),s+=o,r+=o):a===-1?s+=o:a===1&&(r+=o);if(s!==n||r!==e)throw new Error("Content mismatch");return l}const Z="shiki-magic-move",Y=`${Z}-leave-from`,te=`${Z}-leave-to`,et=`${Z}-leave-active`,T=`${Z}-enter-from`,w=`${Z}-enter-to`,nt=`${Z}-enter-active`,st=`${Z}-move`,it=`${Z}-container-resize`,rt=`${Z}-container-restyle`,ee={globalScale:1,duration:500,delayMove:.3,delayLeave:.1,delayEnter:.7,delayContainer:.4,stagger:0,easing:"ease",animateContainer:!0,containerStyle:!0};class ne{mapDom=new Map;previousPromises=[];isFirstRender=!0;constructor(e,t={}){this.options={...ee,...t},typeof e=="string"?this.container=document.querySelector(e):this.container=e,this.anchor=document.createElement("span"),this.anchor.style.position="absolute",this.anchor.style.top="0",this.anchor.style.left="0",this.anchor.style.height="1px",this.anchor.style.width="1px",this.container.prepend(this.anchor)}applyElementContent(e,t){t.content!==`
`&&(e.textContent=t.content,e.classList.add(`${Z}-item`))}applyElementStyle(e,t){if(t.htmlStyle)if(typeof t.htmlStyle=="string")e.setAttribute("style",t.htmlStyle);else for(const[i,s]of Object.entries(t.htmlStyle))e.style.setProperty(i,s);t.htmlClass&&(e.className=[`${Z}-item`,t.htmlClass].join(" ")),t.color&&(e.style.color=t.color),t.bgColor&&(e.style.backgroundColor=t.bgColor)}applyElement(e,t){this.applyElementContent(e,t),this.applyElementStyle(e,t)}applyNodeStyle(e,t){if(t.bg&&(e.style.backgroundColor=t.bg),t.fg&&(e.style.color=t.fg),t.rootStyle){const i=t.rootStyle.split(";");for(const s of i){const[r,l]=s.split(":");r&&l&&e.style.setProperty(r.trim(),l.trim())}}}applyContainerStyle(e){this.options.containerStyle&&this.applyNodeStyle(this.container,e)}registerTransitionEnd(e,t){return()=>{let i=!1,s=()=>{};const r=Promise.race([Promise.allSettled(e.getAnimations().map(l=>l.finished)).then(()=>t()),new Promise(l=>{s=()=>{i||(i=!0,t(),l())}})]);return r.resolve=s,r}}setCssVariables(){this.container.style.setProperty("--smm-duration",`${this.options.duration}ms`),this.container.style.setProperty("--smm-delay-move",`${this.options.delayMove}`),this.container.style.setProperty("--smm-delay-leave",`${this.options.delayLeave}`),this.container.style.setProperty("--smm-delay-enter",`${this.options.delayEnter}`),this.container.style.setProperty("--smm-delay-container",`${this.options.delayContainer}`),this.container.style.setProperty("--smm-easing",this.options.easing),this.container.style.setProperty("--smm-stagger","0")}replace(e){const t=new Map,i=e.tokens.map(s=>{if(this.mapDom.has(s.key)){const r=this.mapDom.get(s.key);return this.applyElement(r,s),t.set(s.key,r),this.mapDom.delete(s.key),r}else{const r=document.createElement(s.content===`
`?"br":"span");return this.applyElement(r,s),t.set(s.key,r),r}});this.container.replaceChildren(this.anchor,...i),this.applyContainerStyle(e),this.mapDom=t}render(e){this.setCssVariables();const t=new Map,i=[],s=[],r=[],l=[];this.previousPromises.forEach(c=>c.resolve()),this.previousPromises=[];const a=[],{globalScale:o}=this.options,h=new Map;let g=this.anchor.getBoundingClientRect();const u=this.container.getBoundingClientRect();for(const c of this.mapDom.values()){const f=c.getBoundingClientRect();h.set(c,{x:f.x-g.x,y:f.y-g.y})}const p=e.tokens.map(c=>{if(this.mapDom.has(c.key)){const f=this.mapDom.get(c.key);return this.applyElementContent(f,c),a.push(()=>{this.applyElementStyle(f,c)}),i.push(f),t.set(c.key,f),this.mapDom.delete(c.key),f}else{const f=document.createElement(c.content===`
`?"br":"span");return this.applyElement(f,c),s.push(f),t.set(c.key,f),f}});for(const[c,f]of this.mapDom)f.tagName!=="BR"&&r.push(f);for(const c of r)c.style.position="absolute";if(this.container.replaceChildren(this.anchor,...p,...r),this.mapDom=t,r.forEach((c,f)=>{c.style.position="absolute";const V=h.get(c);c.style.top=`${V.y/o}px`,c.style.left=`${V.x/o}px`,this.options.stagger?c.style.setProperty("--smm-stagger",`${f*this.options.stagger}ms`):c.style.removeProperty("--smm-stagger"),c.classList.add(Y),c.classList.add(et),a.unshift(()=>{c.classList.remove(Y),c.classList.add(te)}),l.push(this.registerTransitionEnd(c,()=>{c.classList.remove(Y),c.classList.remove(et),c.classList.remove(w),c.remove()}))}),this.isFirstRender||s.forEach((c,f)=>{c.classList.add(T),c.classList.add(nt),this.options.stagger?c.style.setProperty("--smm-stagger",`${f*this.options.stagger}ms`):c.style.removeProperty("--smm-stagger"),a.push(()=>{c.classList.remove(T),c.classList.add(w)}),l.push(this.registerTransitionEnd(c,()=>{c.classList.remove(T),c.classList.remove(nt),c.classList.remove(w)}))}),g=this.anchor.getBoundingClientRect(),i.forEach((c,f)=>{const V=c.getBoundingClientRect(),A={x:V.x-g.x,y:V.y-g.y},y=h.get(c);c.style.transitionDuration=c.style.transitionDelay="0ms";const B=(y.x-A.x)/o,d=(y.y-A.y)/o;c.style.transform=`translate(${B}px, ${d}px)`,this.options.stagger?c.style.setProperty("--smm-stagger",`${f*this.options.stagger}ms`):c.style.removeProperty("--smm-stagger"),a.unshift(()=>{c.classList.add(st),c.style.transform=c.style.transitionDuration=c.style.transitionDelay=""}),l.push(this.registerTransitionEnd(c,()=>{c.classList.remove(st)}))}),this.options.animateContainer&&!this.isFirstRender){const c=this.container.getBoundingClientRect();(c.width!==u.width||c.height!==u.height)&&(this.container.style.transitionDuration=this.container.style.transitionDelay="0ms",this.container.style.height=`${u.height/o}px`,this.container.style.width=`${u.width/o}px`,a.unshift(()=>{this.container.classList.add(it),this.container.style.transitionDuration=this.container.style.transitionDelay="",this.container.style.height=`${c.height/o}px`,this.container.style.width=`${c.width/o}px`}),l.push(this.registerTransitionEnd(this.container,()=>{this.container.classList.remove(it),this.container.style.height=this.container.style.width=""})))}this.options.containerStyle&&(this.isFirstRender?this.applyContainerStyle(e):(a.push(()=>{this.container.classList.add(rt),this.applyContainerStyle(e)}),l.push(this.registerTransitionEnd(this.container,()=>{this.container.classList.remove(rt)})))),se(),a.forEach(c=>c());const m=l.map(c=>c());return this.isFirstRender=!1,this.previousPromises=m,Promise.all(m).then()}}function se(){return document.body.offsetHeight}const ie=K({name:"ShikiMagicMoveRenderer",props:{animate:{type:Boolean,default:!0},tokens:{type:Object,required:!0},previous:{type:Object,required:!1},options:{type:Object}},emits:["end","start"],setup(n,{emit:e}){const t=v();let i=!1;return ot(()=>{t.value.innerHTML="",i=!0;const s=new ne(t.value);at(()=>n.tokens,async r=>{if(Object.assign(s.options,n.options),n.animate){n.previous&&s.replace(n.previous),await O();const l=s.render(r);await O(),e("start"),await l,e("end")}else s.replace(r)},{immediate:!0})}),()=>M("pre",{ref:t,class:"shiki-magic-move-container"},i?void 0:ht(n.tokens.tokens,s=>s.content===`
`?M("br",{key:s.key}):M("span",{style:[{color:s.color},s.htmlStyle],class:["shiki-magic-move-item",s.htmlClass],key:s.key},s.content)))}}),re=K({name:"ShikiMagicMovePrecompiled",props:{steps:{type:Array,required:!0},step:{type:Number,default:0},animate:{type:Boolean,default:!0},options:{type:Object,default:()=>({})}},emits:["start","end"],setup(n,{emit:e}){let i=It("",[]);const s=lt(()=>{const r=_t(i,n.steps[Math.min(n.step,n.steps.length-1)],n.options);return i=r.to,r});return()=>M(ie,{tokens:s.value.to,previous:s.value.from,options:n.options,animate:n.animate,onStart:()=>e("start"),onEnd:()=>e("end")})}}),le={key:0,class:"slidev-code-block-title"},oe={class:"leading-1em"},ae=K({__name:"ShikiMagicMove",props:{at:{type:[String,Number],default:"+1"},stepsLz:{type:String,required:!0},stepRanges:{type:Array,required:!0},lines:{type:Boolean,default:Bt.lineNumbers},title:{type:String,default:""}},setup(n){const e=n,t=JSON.parse(Ct.decompressFromBase64(e.stepsLz)),{$clicksContext:i,$scale:s,$zoom:r}=ct(),{isPrintMode:l}=Vt(),a=Rt(),o=v(0),h=v(),g=lt(()=>e.stepRanges.map(u=>u.length?u:["all"]));return ut(()=>{i?.unregister(a)}),ot(()=>{if(!i)return;if(g.value.length!==t.length)throw new Error("[slidev] The length of stepRanges does not match the length of steps, this is an internal error.");const u=g.value.map(m=>m.length).reduce((m,c)=>m+c,0),p=i.calculateSince(e.at,u-1);i.register(a,p),at(()=>i.current,()=>{const m=p?i.current-p.start:Ft;let c=t.length-1,f=0,V="all";for(let A=0;A<g.value.length;A++){const y=g.value[A];if(m<f+y.length-1){c=A,V=y[m-f+1];break}f+=y.length||1}O(async()=>{o.value=c,await St(0);const A=h.value?.querySelector(".shiki");if(!A)return;const B=Array.from(A.children).slice(1).filter(d=>!d.className.includes("shiki-magic-move-leave")).reduce((d,R)=>(R.tagName==="BR"?d.push([]):d[d.length-1].push(R),d),[[]]);bt(V,B.length,1,d=>B[d])})},{immediate:!0})}),(u,p)=>(G(),Q("div",{ref_key:"container",ref:h,class:"slidev-code-wrapper slidev-code-magic-move relative"},[n.title?(G(),Q("div",le,[q(Et,{title:n.title},null,8,["title"]),j("div",oe,pt(n.title.replace(/~([^~]+)~/g,"").trim()),1)])):gt("v-if",!0),q(k(re),{class:"slidev-code relative shiki overflow-visible",steps:k(t),step:o.value,animate:!k(l),options:{globalScale:k(s)*k(r),duration:800,stagger:1}},null,8,["steps","step","animate","options"])],512))}}),ce={class:"text-sm slide-30-small-code text-left"},Ae={__name:"slide-30-proposed-migration.md__slidev_17",setup(n){const{$clicksContext:e,$frontmatter:t}=ct();return e.setup(),(i,s)=>{const r=ae;return G(),mt(Nt,yt(At(k(Zt)(k(t),16))),{default:ft(()=>[s[0]||(s[0]=j("h1",null,"Proposed Migration: V1 to V3 Transformation",-1)),j("div",ce,[q(r,dt({lines:!0},{"steps-lz":"",title:"","step-ranges":[["all","5","6","7"],["all","6-9","11-21","22-26"],["all","8","9-15"],["*"]]}),null,16)])]),_:1,__:[0]},16)}}};export{Ae as default};
